#!/usr/bin/env bash
#
# make-static.sh
# Convert current DHCP lease into a static IP config on Debian 12.
#
# Usage: sudo ./make-static.sh
# (Optionally set INTERFACE=eth0 on the command line)

set -euo pipefail

# -- Helpers ------------------------------------------------------------------

# Convert CIDR prefix length (e.g. "24") into dotted netmask (e.g. "255.255.255.0").
prefix_to_netmask() {
  local prefix=$1
  local i octet mask=""
  local full_octets=$(( prefix / 8 ))
  local rem=$(( prefix % 8 ))
  for ((i=0; i<4; i++)); do
    if   (( i < full_octets )); then octet=255
    elif (( i == full_octets )); then octet=$(( (0xFF << (8-rem)) & 0xFF ))
    else octet=0
    fi
    mask+=$octet
    [[ $i -lt 3 ]] && mask+=.
  done
  echo "$mask"
}

# Ensure running as root
if [[ $EUID -ne 0 ]]; then
  echo "⚠️  Please run as root (e.g. sudo $0)" >&2
  exit 1
fi

# -- Detect current settings -----------------------------------------------

# Allow override
IFACE="${INTERFACE:-}"

# 1) Find primary interface if not specified
if [[ -z "$IFACE" ]]; then
  IFACE=$(ip route 2>/dev/null | awk '/^default/ { print $5; exit }')
  if [[ -z "$IFACE" ]]; then
    echo "❌  Could not detect primary interface." >&2
    exit 1
  fi
fi
echo "Detected interface: $IFACE"

# 2) IP + prefix
ip_cidr=$(ip -4 -o addr show dev "$IFACE" \
         | awk '{ sub("/"," "); print $4"/"$4 }' \
         | head -n1)
# Better parsing
ip_cidr=$(ip -4 -o addr show dev "$IFACE" \
         | awk '{print $4}' \
         | head -n1)

if [[ -z "$ip_cidr" ]]; then
  echo "❌  No IPv4 address found on $IFACE." >&2
  exit 1
fi
IP="${ip_cidr%/*}"
PREFIX="${ip_cidr#*/}"
NETMASK=$(prefix_to_netmask "$PREFIX")
echo "IP address:   $IP"
echo "Netmask:      $NETMASK"

# 3) Gateway
GATEWAY=$(ip route | awk '/^default/ { print $3; exit }')
if [[ -z "$GATEWAY" ]]; then
  echo "❌  No default gateway found." >&2
  exit 1
fi
echo "Gateway:      $GATEWAY"

# 4) DNS (take first two from resolv.conf)
readarray -t DNS_SERVERS < <(awk '/^nameserver/ { print $2 }' /etc/resolv.conf | uniq | head -n2)
DNS_LINE=""
if ((${#DNS_SERVERS[@]})); then
  DNS_LINE="    dns-nameservers ${DNS_SERVERS[*]}"
  echo "DNS servers:  ${DNS_SERVERS[*]}"
else
  echo "⚠️  No DNS servers found in /etc/resolv.conf."
fi

# -- Backup and rewrite -----------------------------------------------------

TIMESTAMP=$(date +%Y%m%d-%H%M%S)
SRC="/etc/network/interfaces"
BACKUP="${SRC}.dhcp-to-static.bak-${TIMESTAMP}"

echo "Backing up $SRC → $BACKUP"
cp -p "$SRC" "$BACKUP"

cat > "$SRC" <<EOF
# /etc/network/interfaces — generated by make-static.sh on $(date)
# Loopback
auto lo
iface lo inet loopback

# Static config for $IFACE
auto $IFACE
iface $IFACE inet static
    address $IP
    netmask $NETMASK
    gateway $GATEWAY
$DNS_LINE
EOF

echo "Wrote new static config to $SRC"

# -- Restart networking -----------------------------------------------------

echo "Restarting networking..."
if systemctl is-active --quiet networking; then
  systemctl restart networking
else
  # fallback
  ifdown "$IFACE" || true
  ifup   "$IFACE"
fi

echo "✅  $IFACE is now STATIC ($IP/$PREFIX via $GATEWAY)"
